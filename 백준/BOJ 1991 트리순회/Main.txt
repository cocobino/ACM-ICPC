import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.OutputStreamWriter;
import java.util.StringTokenizer;

class Main{
	
	public static void main(String[] args) throws IOException{
		BufferedReader br = new BufferedReader(new InputStreamReader(System.in));
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		
		int test_case = Integer.parseInt(br.readLine());
		
		int[][] arr = new int[26][2];
		for(int i=0; i<test_case; i++) {
			String line = br.readLine();
			
			int x = line.charAt(0) - 'A';
			char y = line.charAt(2);
			char z = line.charAt(4);
			
			if(y == '.') {
				arr[x][0] = -1;
			}else {
				arr[x][0] = y-'A';
			}
			if(z =='.') {
				arr[x][1] =-1;
			}else {
				arr[x][1] = z-'A';
			}
		}
		
		preorder(arr, 0);
		bw.write(String.valueOf("\n"));
		inorder(arr,0);
		bw.write(String.valueOf("\n"));
		postorder(arr,0);
		}

	private static void postorder(int[][] arr, int i) throws IOException {
		// TODO Auto-generated method stub
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		if(i== -1)return;
		inorder(arr, arr[i][0]);
		inorder(arr, arr[i][1]);
	}

	private static void inorder(int[][] arr, int i) throws IOException {
		// TODO Auto-generated method stub
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		if(i== -1)return;
		inorder(arr, arr[i][0]);
		bw.write(String.valueOf((char)(i+'A')));
		bw.flush();
		inorder(arr, arr[i][1]);
		
		
	}

	private static void preorder(int[][] arr, int i) throws IOException {
		// TODO Auto-generated method stub
		BufferedWriter bw = new BufferedWriter(new OutputStreamWriter(System.out));
		if(i==-1)return;
		bw.write(String.valueOf((char)(i+'A')));
		bw.flush();
		preorder(arr, arr[i][0]);
		preorder(arr, arr[i][1]);
	}
		
	
	}